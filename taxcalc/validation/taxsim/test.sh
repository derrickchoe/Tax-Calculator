# Execute a single validation test as follows:
# (1) generate a random sample of tax filing units (INPUT),
# (2) generate TC_OUTPUT from INPUT using taxcalc/cli/tc.py --dump,
# (3) convert TC_OUTPUT to TAXSIM-27-formatted output (OUTPUT), and
# (4) generate tax-difference tabulations by comparing OUTPUT with output file
#     generated by Internet-TAXSIM-version-27 using the INPUT generated in (1).
#
# USAGE: bash test.sh LYY [save]
#
# Check command-line arguments
if [[ "$#" -lt 1 || "$#" -gt 2 ]]; then
    echo "ERROR: number of command-line arguments not in 1-to-2 range"
    echo "USAGE: bash test.sh LYY [save]"
    echo "       WHERE L is a letter that is valid taxsim_input.py L input and"
    echo "             YY is valid taxsim_input.py YEAR (20YY) input;"
    echo "       WHERE the 'save' option skips the deletion of INPUT and"
    echo "             OUTPUT files at the end of the test"
    touch testerror
    exit 1
fi
LYY=$1
SAVE=false
if [[ "$#" -eq 2 ]]; then
    if [[ "$2" == "save" ]]; then
        SAVE=true
    else
        echo "ERROR: optional second command-line argument must be 'save'"
        echo "USAGE: bash test.sh LYY [save]"
        touch testerror
        exit 1
    fi
fi
# Generate specified INPUT file
L=${LYY:0:1}    
YY=${LYY:1:2}
python taxsim_input.py 20$YY $L > $LYY.in
# Generate TAXSIM-27-formatted output using Tax-Calculator tc CLI
./taxcalc.sh $LYY.in save
# Unzip TAXSIM-27 OUTPUT for specified INPUT
unzip -oq output-taxsim.zip $LYY.in.out-taxsim
# Compare Tax-Calculator OUTPUT and Internet-TAXSIM-27 OUTPUT files
tclsh taxdiffs.tcl $LYY.in.out-taxcalc $LYY.in.out-taxsim > $LYY.taxdiffs
RC=$?
if [[ $RC -ne 0 ]]; then
   exit $RC
fi
# Check for difference between actual .taxdiffs and .taxdiffs-expect files
DIR="taxsim"
diff --brief $LYY.taxdiffs $LYY.taxdiffs-expect
RC=$?
if [[ $RC -ne 0 ]]; then
    touch testerror
    MSG="DIFF $DIR/$LYY"
    RED=$(tput setaf 1)
    BOLD=$(tput bold)
    NORMAL=$(tput sgr0)
    printf "$BOLD$RED$MSG$NORMAL\n"
else
    printf "SAME $DIR/$LYY\n"
    if [[ "$SAVE" == false ]] ; then
        rm -f $LYY.taxdiffs
    fi
fi
# Remove temporary files
rm -f $LYY.in-$YY-#-#-#-doc.text
if [[ "$SAVE" == false ]] ; then
    rm -f $LYY.in $LYY.in.csv $LYY.in-$YY-#-#-#.csv \
          $LYY.in.out-taxcalc $LYY.in.out-taxsim
fi
exit $RC
